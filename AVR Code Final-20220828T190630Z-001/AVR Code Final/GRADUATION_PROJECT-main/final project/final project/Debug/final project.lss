
final project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000514  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000588  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000e  00800060  00800060  00000588  2**0
                  ALLOC
  3 .comment      00000060  00000000  00000000  00000588  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000005e8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d0  00000000  00000000  00000624  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000e57  00000000  00000000  000006f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000731  00000000  00000000  0000154b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000007f9  00000000  00000000  00001c7c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000210  00000000  00000000  00002478  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005b3  00000000  00000000  00002688  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000aee  00000000  00000000  00002c3b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a0  00000000  00000000  00003729  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3a 02 	jmp	0x474	; 0x474 <__vector_10>
  2c:	0c 94 61 02 	jmp	0x4c2	; 0x4c2 <__vector_11>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	ae 36       	cpi	r26, 0x6E	; 110
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 04 01 	call	0x208	; 0x208 <main>
  74:	0c 94 88 02 	jmp	0x510	; 0x510 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <PWM_Init>:
	}
}


void PWM_Init(){
	DDRD |= (1<<7);                              //set PD7 as PWM output
  7c:	81 b3       	in	r24, 0x11	; 17
  7e:	80 68       	ori	r24, 0x80	; 128
  80:	81 bb       	out	0x11, r24	; 17
	

	TCCR2 |= (1<<WGM20)|(1<<WGM21);                //select Fast PWM mode by setting bits
  82:	85 b5       	in	r24, 0x25	; 37
  84:	88 64       	ori	r24, 0x48	; 72
  86:	85 bd       	out	0x25, r24	; 37


	TCCR2 |=(1<<COM21)|(1<<CS20)|(0<<CS21)|(0<<CS22);   //clear OC2 on compare match
  88:	85 b5       	in	r24, 0x25	; 37
  8a:	81 62       	ori	r24, 0x21	; 33
  8c:	85 bd       	out	0x25, r24	; 37
  8e:	08 95       	ret

00000090 <keys_init>:
	
}
void keys_init()
{
	/*KEYS INITIALIZING ON PORT A*/
	MDIO_SETPIN_STATUS(PORTA,PIN0|PIN1|PIN2|PIN3|PIN4|PIN5|PIN6|PIN7,INPUT_FLOAT);
  90:	41 e0       	ldi	r20, 0x01	; 1
  92:	6f ef       	ldi	r22, 0xFF	; 255
  94:	80 e0       	ldi	r24, 0x00	; 0
  96:	0e 94 1e 01 	call	0x23c	; 0x23c <MDIO_SETPIN_STATUS>
	MDIO_SETPIN_STATUS(PORTD,PIN6,INPUT_FLOAT);
  9a:	41 e0       	ldi	r20, 0x01	; 1
  9c:	60 e4       	ldi	r22, 0x40	; 64
  9e:	83 e0       	ldi	r24, 0x03	; 3
  a0:	0e 94 1e 01 	call	0x23c	; 0x23c <MDIO_SETPIN_STATUS>
	/*KEYS VALUES*/
	Z_AXIS_UP=MDIO_GETPIN_VALUE(PORTA,PIN0);
  a4:	61 e0       	ldi	r22, 0x01	; 1
  a6:	80 e0       	ldi	r24, 0x00	; 0
  a8:	0e 94 c3 01 	call	0x386	; 0x386 <MDIO_GETPIN_VALUE>
  ac:	80 93 6b 00 	sts	0x006B, r24	; 0x80006b <Z_AXIS_UP>
	Z_AXIS_DOWN=MDIO_GETPIN_VALUE(PORTA,PIN1);
  b0:	62 e0       	ldi	r22, 0x02	; 2
  b2:	80 e0       	ldi	r24, 0x00	; 0
  b4:	0e 94 c3 01 	call	0x386	; 0x386 <MDIO_GETPIN_VALUE>
  b8:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <Z_AXIS_DOWN>
	
	BASE_RIGHT=MDIO_GETPIN_VALUE(PORTA,PIN2);
  bc:	64 e0       	ldi	r22, 0x04	; 4
  be:	80 e0       	ldi	r24, 0x00	; 0
  c0:	0e 94 c3 01 	call	0x386	; 0x386 <MDIO_GETPIN_VALUE>
  c4:	80 93 6d 00 	sts	0x006D, r24	; 0x80006d <BASE_RIGHT>
	BASE_LEFT=MDIO_GETPIN_VALUE(PORTA,PIN3);
  c8:	68 e0       	ldi	r22, 0x08	; 8
  ca:	80 e0       	ldi	r24, 0x00	; 0
  cc:	0e 94 c3 01 	call	0x386	; 0x386 <MDIO_GETPIN_VALUE>
  d0:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <BASE_LEFT>
	
	FEED_UP=MDIO_GETPIN_VALUE(PORTA,PIN4);
  d4:	60 e1       	ldi	r22, 0x10	; 16
  d6:	80 e0       	ldi	r24, 0x00	; 0
  d8:	0e 94 c3 01 	call	0x386	; 0x386 <MDIO_GETPIN_VALUE>
  dc:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <FEED_UP>
	FEED_DOWN=MDIO_GETPIN_VALUE(PORTA,PIN5);
  e0:	60 e2       	ldi	r22, 0x20	; 32
  e2:	80 e0       	ldi	r24, 0x00	; 0
  e4:	0e 94 c3 01 	call	0x386	; 0x386 <MDIO_GETPIN_VALUE>
  e8:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <FEED_DOWN>
	
	Y_AXIS_RIGHT=MDIO_GETPIN_VALUE(PORTA,PIN6);
  ec:	60 e4       	ldi	r22, 0x40	; 64
  ee:	80 e0       	ldi	r24, 0x00	; 0
  f0:	0e 94 c3 01 	call	0x386	; 0x386 <MDIO_GETPIN_VALUE>
  f4:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <Y_AXIS_RIGHT>
	Y_AXIS_LEFT=MDIO_GETPIN_VALUE(PORTA,PIN7);
  f8:	60 e8       	ldi	r22, 0x80	; 128
  fa:	80 e0       	ldi	r24, 0x00	; 0
  fc:	0e 94 c3 01 	call	0x386	; 0x386 <MDIO_GETPIN_VALUE>
 100:	80 93 67 00 	sts	0x0067, r24	; 0x800067 <Y_AXIS_LEFT>
	stop_button=MDIO_GETPIN_VALUE(PORTD,PIN6);
 104:	60 e4       	ldi	r22, 0x40	; 64
 106:	83 e0       	ldi	r24, 0x03	; 3
 108:	0e 94 c3 01 	call	0x386	; 0x386 <MDIO_GETPIN_VALUE>
 10c:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 110:	08 95       	ret

00000112 <motor_init>:
	
}


void motor_init(u8_t status,u8_t Motor)
{
 112:	cf 93       	push	r28
 114:	df 93       	push	r29
 116:	c8 2f       	mov	r28, r24
 118:	d6 2f       	mov	r29, r22
	MDIO_SETPIN_STATUS(PORTD,PIN0|PIN1|PIN2|PIN3|PIN4|PIN5|PIN6|PIN7,OUTPUT);
 11a:	40 e0       	ldi	r20, 0x00	; 0
 11c:	6f ef       	ldi	r22, 0xFF	; 255
 11e:	83 e0       	ldi	r24, 0x03	; 3
 120:	0e 94 1e 01 	call	0x23c	; 0x23c <MDIO_SETPIN_STATUS>
	
	
	if (status==idle_state)
 124:	c1 11       	cpse	r28, r1
 126:	06 c0       	rjmp	.+12     	; 0x134 <motor_init+0x22>
	{
		MDIO_SETPIN_VALUE(PORTD,PIN0|PIN1|PIN2|PIN3|PIN4|PIN5|PIN6|PIN7,LOW);
 128:	40 e0       	ldi	r20, 0x00	; 0
 12a:	6f ef       	ldi	r22, 0xFF	; 255
 12c:	83 e0       	ldi	r24, 0x03	; 3
 12e:	0e 94 87 01 	call	0x30e	; 0x30e <MDIO_SETPIN_VALUE>
 132:	67 c0       	rjmp	.+206    	; 0x202 <motor_init+0xf0>
	}
	else if (status==start_state)
 134:	c1 30       	cpi	r28, 0x01	; 1
 136:	91 f5       	brne	.+100    	; 0x19c <motor_init+0x8a>
	{
		switch(Motor)
 138:	d2 30       	cpi	r29, 0x02	; 2
 13a:	a1 f0       	breq	.+40     	; 0x164 <motor_init+0x52>
 13c:	18 f4       	brcc	.+6      	; 0x144 <motor_init+0x32>
 13e:	d1 30       	cpi	r29, 0x01	; 1
 140:	31 f0       	breq	.+12     	; 0x14e <motor_init+0x3c>
 142:	5f c0       	rjmp	.+190    	; 0x202 <motor_init+0xf0>
 144:	d3 30       	cpi	r29, 0x03	; 3
 146:	c9 f0       	breq	.+50     	; 0x17a <motor_init+0x68>
 148:	d4 30       	cpi	r29, 0x04	; 4
 14a:	e9 f0       	breq	.+58     	; 0x186 <motor_init+0x74>
 14c:	5a c0       	rjmp	.+180    	; 0x202 <motor_init+0xf0>
		{
			case Z_AXIS_M:
			{
				MDIO_SETPIN_VALUE(PORTD,PIN0,HIGH);
 14e:	41 e0       	ldi	r20, 0x01	; 1
 150:	61 e0       	ldi	r22, 0x01	; 1
 152:	83 e0       	ldi	r24, 0x03	; 3
 154:	0e 94 87 01 	call	0x30e	; 0x30e <MDIO_SETPIN_VALUE>
				MDIO_SETPIN_VALUE(PORTD,PIN1,LOW);
 158:	40 e0       	ldi	r20, 0x00	; 0
 15a:	62 e0       	ldi	r22, 0x02	; 2
 15c:	83 e0       	ldi	r24, 0x03	; 3
 15e:	0e 94 87 01 	call	0x30e	; 0x30e <MDIO_SETPIN_VALUE>
				break;
 162:	4f c0       	rjmp	.+158    	; 0x202 <motor_init+0xf0>
			}
			case BASE_M:
			{
				MDIO_SETPIN_VALUE(PORTD,PIN2,HIGH);
 164:	41 e0       	ldi	r20, 0x01	; 1
 166:	64 e0       	ldi	r22, 0x04	; 4
 168:	83 e0       	ldi	r24, 0x03	; 3
 16a:	0e 94 87 01 	call	0x30e	; 0x30e <MDIO_SETPIN_VALUE>
				MDIO_SETPIN_VALUE(PORTD,PIN3,LOW);
 16e:	40 e0       	ldi	r20, 0x00	; 0
 170:	68 e0       	ldi	r22, 0x08	; 8
 172:	83 e0       	ldi	r24, 0x03	; 3
 174:	0e 94 87 01 	call	0x30e	; 0x30e <MDIO_SETPIN_VALUE>
				break;
 178:	44 c0       	rjmp	.+136    	; 0x202 <motor_init+0xf0>
			}
			case FEED_M:
			{
				MDIO_SETPIN_VALUE(PORTD,PIN4,HIGH);
 17a:	41 e0       	ldi	r20, 0x01	; 1
 17c:	60 e1       	ldi	r22, 0x10	; 16
 17e:	83 e0       	ldi	r24, 0x03	; 3
 180:	0e 94 87 01 	call	0x30e	; 0x30e <MDIO_SETPIN_VALUE>
				break;
 184:	3e c0       	rjmp	.+124    	; 0x202 <motor_init+0xf0>
			}
			case Y_AXIS_M:
			{
				MDIO_SETPIN_VALUE(PORTD,PIN5,HIGH);
 186:	41 e0       	ldi	r20, 0x01	; 1
 188:	60 e2       	ldi	r22, 0x20	; 32
 18a:	83 e0       	ldi	r24, 0x03	; 3
 18c:	0e 94 87 01 	call	0x30e	; 0x30e <MDIO_SETPIN_VALUE>
				MDIO_SETPIN_VALUE(PORTD,PIN6,LOW);
 190:	40 e0       	ldi	r20, 0x00	; 0
 192:	60 e4       	ldi	r22, 0x40	; 64
 194:	83 e0       	ldi	r24, 0x03	; 3
 196:	0e 94 87 01 	call	0x30e	; 0x30e <MDIO_SETPIN_VALUE>
				break;
 19a:	33 c0       	rjmp	.+102    	; 0x202 <motor_init+0xf0>
			}
		}
	}
	else if (status==stop_state)
 19c:	c2 30       	cpi	r28, 0x02	; 2
 19e:	89 f5       	brne	.+98     	; 0x202 <motor_init+0xf0>
	{
		switch(Motor)
 1a0:	d2 30       	cpi	r29, 0x02	; 2
 1a2:	a1 f0       	breq	.+40     	; 0x1cc <motor_init+0xba>
 1a4:	18 f4       	brcc	.+6      	; 0x1ac <motor_init+0x9a>
 1a6:	d1 30       	cpi	r29, 0x01	; 1
 1a8:	31 f0       	breq	.+12     	; 0x1b6 <motor_init+0xa4>
 1aa:	2b c0       	rjmp	.+86     	; 0x202 <motor_init+0xf0>
 1ac:	d3 30       	cpi	r29, 0x03	; 3
 1ae:	c9 f0       	breq	.+50     	; 0x1e2 <motor_init+0xd0>
 1b0:	d4 30       	cpi	r29, 0x04	; 4
 1b2:	e9 f0       	breq	.+58     	; 0x1ee <motor_init+0xdc>
 1b4:	26 c0       	rjmp	.+76     	; 0x202 <motor_init+0xf0>
		{
			case Z_AXIS_M:
			{
				MDIO_SETPIN_VALUE(PORTD,PIN0,LOW);
 1b6:	40 e0       	ldi	r20, 0x00	; 0
 1b8:	61 e0       	ldi	r22, 0x01	; 1
 1ba:	83 e0       	ldi	r24, 0x03	; 3
 1bc:	0e 94 87 01 	call	0x30e	; 0x30e <MDIO_SETPIN_VALUE>
				MDIO_SETPIN_VALUE(PORTD,PIN1,LOW);
 1c0:	40 e0       	ldi	r20, 0x00	; 0
 1c2:	62 e0       	ldi	r22, 0x02	; 2
 1c4:	83 e0       	ldi	r24, 0x03	; 3
 1c6:	0e 94 87 01 	call	0x30e	; 0x30e <MDIO_SETPIN_VALUE>
				break;
 1ca:	1b c0       	rjmp	.+54     	; 0x202 <motor_init+0xf0>
			}
			case BASE_M:
			{
				MDIO_SETPIN_VALUE(PORTD,PIN2,LOW);
 1cc:	40 e0       	ldi	r20, 0x00	; 0
 1ce:	64 e0       	ldi	r22, 0x04	; 4
 1d0:	83 e0       	ldi	r24, 0x03	; 3
 1d2:	0e 94 87 01 	call	0x30e	; 0x30e <MDIO_SETPIN_VALUE>
				MDIO_SETPIN_VALUE(PORTD,PIN3,LOW);
 1d6:	40 e0       	ldi	r20, 0x00	; 0
 1d8:	68 e0       	ldi	r22, 0x08	; 8
 1da:	83 e0       	ldi	r24, 0x03	; 3
 1dc:	0e 94 87 01 	call	0x30e	; 0x30e <MDIO_SETPIN_VALUE>
				break;
 1e0:	10 c0       	rjmp	.+32     	; 0x202 <motor_init+0xf0>
			}
			case FEED_M:
			{
				MDIO_SETPIN_VALUE(PORTD,PIN4,LOW);
 1e2:	40 e0       	ldi	r20, 0x00	; 0
 1e4:	60 e1       	ldi	r22, 0x10	; 16
 1e6:	83 e0       	ldi	r24, 0x03	; 3
 1e8:	0e 94 87 01 	call	0x30e	; 0x30e <MDIO_SETPIN_VALUE>
				break;
 1ec:	0a c0       	rjmp	.+20     	; 0x202 <motor_init+0xf0>
			}
			case Y_AXIS_M:
			{
				MDIO_SETPIN_VALUE(PORTD,PIN5,LOW);
 1ee:	40 e0       	ldi	r20, 0x00	; 0
 1f0:	60 e2       	ldi	r22, 0x20	; 32
 1f2:	83 e0       	ldi	r24, 0x03	; 3
 1f4:	0e 94 87 01 	call	0x30e	; 0x30e <MDIO_SETPIN_VALUE>
				MDIO_SETPIN_VALUE(PORTD,PIN6,LOW);
 1f8:	40 e0       	ldi	r20, 0x00	; 0
 1fa:	60 e4       	ldi	r22, 0x40	; 64
 1fc:	83 e0       	ldi	r24, 0x03	; 3
 1fe:	0e 94 87 01 	call	0x30e	; 0x30e <MDIO_SETPIN_VALUE>
				break;
			}
		}
	}
}
 202:	df 91       	pop	r29
 204:	cf 91       	pop	r28
 206:	08 95       	ret

00000208 <main>:


int main(void)
{
	
	MDIO_SETPIN_STATUS(PORTB,PIN1|PIN3,OUTPUT);      //SETTING THE OC0 AND DIRECTION FOR CYTRON
 208:	40 e0       	ldi	r20, 0x00	; 0
 20a:	6a e0       	ldi	r22, 0x0A	; 10
 20c:	81 e0       	ldi	r24, 0x01	; 1
 20e:	0e 94 1e 01 	call	0x23c	; 0x23c <MDIO_SETPIN_STATUS>
	
	TIMER0_INITIALIZE(PWM_PHASE,NO_PRESCALE);		//OC0 PWM
 212:	61 e0       	ldi	r22, 0x01	; 1
 214:	82 e0       	ldi	r24, 0x02	; 2
 216:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <TIMER0_INITIALIZE>
	
	PWM_Init();								// OC2 PWM
 21a:	0e 94 3e 00 	call	0x7c	; 0x7c <PWM_Init>
	
	

	motor_init(idle_state,BASE_M);
 21e:	62 e0       	ldi	r22, 0x02	; 2
 220:	80 e0       	ldi	r24, 0x00	; 0
 222:	0e 94 89 00 	call	0x112	; 0x112 <motor_init>
	TIMER0_INITIALIZE(PWM_PHASE,NO_PRESCALE);
 226:	61 e0       	ldi	r22, 0x01	; 1
 228:	82 e0       	ldi	r24, 0x02	; 2
 22a:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <TIMER0_INITIALIZE>
	
	//TIMER0_PWM_SETUP(PWM_NON_INVERT,255*.);
	while (1)
	{
		TIMER0_PWM_SETUP(PWM_NON_INVERT,255*.7);		//.7	
 22e:	62 eb       	ldi	r22, 0xB2	; 178
 230:	82 e0       	ldi	r24, 0x02	; 2
 232:	0e 94 25 02 	call	0x44a	; 0x44a <TIMER0_PWM_SETUP>
		/*INITIALIZING THE PWM SIGNALS*/					
		
	
		/*GETTING THE VALUES OF THE SWITCHES*/
		keys_init();
 236:	0e 94 48 00 	call	0x90	; 0x90 <keys_init>
 23a:	f9 cf       	rjmp	.-14     	; 0x22e <main+0x26>

0000023c <MDIO_SETPIN_STATUS>:
 23c:	81 30       	cpi	r24, 0x01	; 1
 23e:	f9 f0       	breq	.+62     	; 0x27e <MDIO_SETPIN_STATUS+0x42>
 240:	30 f0       	brcs	.+12     	; 0x24e <MDIO_SETPIN_STATUS+0x12>
 242:	82 30       	cpi	r24, 0x02	; 2
 244:	a1 f1       	breq	.+104    	; 0x2ae <MDIO_SETPIN_STATUS+0x72>
 246:	83 30       	cpi	r24, 0x03	; 3
 248:	09 f4       	brne	.+2      	; 0x24c <MDIO_SETPIN_STATUS+0x10>
 24a:	49 c0       	rjmp	.+146    	; 0x2de <MDIO_SETPIN_STATUS+0xa2>
 24c:	08 95       	ret
 24e:	41 30       	cpi	r20, 0x01	; 1
 250:	41 f0       	breq	.+16     	; 0x262 <MDIO_SETPIN_STATUS+0x26>
 252:	18 f0       	brcs	.+6      	; 0x25a <MDIO_SETPIN_STATUS+0x1e>
 254:	42 30       	cpi	r20, 0x02	; 2
 256:	51 f0       	breq	.+20     	; 0x26c <MDIO_SETPIN_STATUS+0x30>
 258:	08 95       	ret
 25a:	8a b3       	in	r24, 0x1a	; 26
 25c:	68 2b       	or	r22, r24
 25e:	6a bb       	out	0x1a, r22	; 26
 260:	08 95       	ret
 262:	8a b3       	in	r24, 0x1a	; 26
 264:	60 95       	com	r22
 266:	68 23       	and	r22, r24
 268:	6a bb       	out	0x1a, r22	; 26
 26a:	08 95       	ret
 26c:	8a b3       	in	r24, 0x1a	; 26
 26e:	96 2f       	mov	r25, r22
 270:	90 95       	com	r25
 272:	89 23       	and	r24, r25
 274:	8a bb       	out	0x1a, r24	; 26
 276:	8b b3       	in	r24, 0x1b	; 27
 278:	68 2b       	or	r22, r24
 27a:	6b bb       	out	0x1b, r22	; 27
 27c:	08 95       	ret
 27e:	41 30       	cpi	r20, 0x01	; 1
 280:	41 f0       	breq	.+16     	; 0x292 <MDIO_SETPIN_STATUS+0x56>
 282:	18 f0       	brcs	.+6      	; 0x28a <MDIO_SETPIN_STATUS+0x4e>
 284:	42 30       	cpi	r20, 0x02	; 2
 286:	51 f0       	breq	.+20     	; 0x29c <MDIO_SETPIN_STATUS+0x60>
 288:	08 95       	ret
 28a:	87 b3       	in	r24, 0x17	; 23
 28c:	68 2b       	or	r22, r24
 28e:	67 bb       	out	0x17, r22	; 23
 290:	08 95       	ret
 292:	87 b3       	in	r24, 0x17	; 23
 294:	60 95       	com	r22
 296:	68 23       	and	r22, r24
 298:	67 bb       	out	0x17, r22	; 23
 29a:	08 95       	ret
 29c:	87 b3       	in	r24, 0x17	; 23
 29e:	96 2f       	mov	r25, r22
 2a0:	90 95       	com	r25
 2a2:	89 23       	and	r24, r25
 2a4:	87 bb       	out	0x17, r24	; 23
 2a6:	88 b3       	in	r24, 0x18	; 24
 2a8:	68 2b       	or	r22, r24
 2aa:	68 bb       	out	0x18, r22	; 24
 2ac:	08 95       	ret
 2ae:	41 30       	cpi	r20, 0x01	; 1
 2b0:	41 f0       	breq	.+16     	; 0x2c2 <MDIO_SETPIN_STATUS+0x86>
 2b2:	18 f0       	brcs	.+6      	; 0x2ba <MDIO_SETPIN_STATUS+0x7e>
 2b4:	42 30       	cpi	r20, 0x02	; 2
 2b6:	51 f0       	breq	.+20     	; 0x2cc <MDIO_SETPIN_STATUS+0x90>
 2b8:	08 95       	ret
 2ba:	84 b3       	in	r24, 0x14	; 20
 2bc:	68 2b       	or	r22, r24
 2be:	64 bb       	out	0x14, r22	; 20
 2c0:	08 95       	ret
 2c2:	84 b3       	in	r24, 0x14	; 20
 2c4:	60 95       	com	r22
 2c6:	68 23       	and	r22, r24
 2c8:	64 bb       	out	0x14, r22	; 20
 2ca:	08 95       	ret
 2cc:	84 b3       	in	r24, 0x14	; 20
 2ce:	96 2f       	mov	r25, r22
 2d0:	90 95       	com	r25
 2d2:	89 23       	and	r24, r25
 2d4:	84 bb       	out	0x14, r24	; 20
 2d6:	85 b3       	in	r24, 0x15	; 21
 2d8:	68 2b       	or	r22, r24
 2da:	65 bb       	out	0x15, r22	; 21
 2dc:	08 95       	ret
 2de:	41 30       	cpi	r20, 0x01	; 1
 2e0:	41 f0       	breq	.+16     	; 0x2f2 <MDIO_SETPIN_STATUS+0xb6>
 2e2:	18 f0       	brcs	.+6      	; 0x2ea <MDIO_SETPIN_STATUS+0xae>
 2e4:	42 30       	cpi	r20, 0x02	; 2
 2e6:	51 f0       	breq	.+20     	; 0x2fc <MDIO_SETPIN_STATUS+0xc0>
 2e8:	08 95       	ret
 2ea:	81 b3       	in	r24, 0x11	; 17
 2ec:	68 2b       	or	r22, r24
 2ee:	61 bb       	out	0x11, r22	; 17
 2f0:	08 95       	ret
 2f2:	81 b3       	in	r24, 0x11	; 17
 2f4:	60 95       	com	r22
 2f6:	68 23       	and	r22, r24
 2f8:	61 bb       	out	0x11, r22	; 17
 2fa:	08 95       	ret
 2fc:	81 b3       	in	r24, 0x11	; 17
 2fe:	96 2f       	mov	r25, r22
 300:	90 95       	com	r25
 302:	89 23       	and	r24, r25
 304:	81 bb       	out	0x11, r24	; 17
 306:	82 b3       	in	r24, 0x12	; 18
 308:	68 2b       	or	r22, r24
 30a:	62 bb       	out	0x12, r22	; 18
 30c:	08 95       	ret

0000030e <MDIO_SETPIN_VALUE>:
 30e:	81 30       	cpi	r24, 0x01	; 1
 310:	99 f0       	breq	.+38     	; 0x338 <MDIO_SETPIN_VALUE+0x2a>
 312:	28 f0       	brcs	.+10     	; 0x31e <MDIO_SETPIN_VALUE+0x10>
 314:	82 30       	cpi	r24, 0x02	; 2
 316:	e9 f0       	breq	.+58     	; 0x352 <MDIO_SETPIN_VALUE+0x44>
 318:	83 30       	cpi	r24, 0x03	; 3
 31a:	41 f1       	breq	.+80     	; 0x36c <MDIO_SETPIN_VALUE+0x5e>
 31c:	08 95       	ret
 31e:	44 23       	and	r20, r20
 320:	31 f0       	breq	.+12     	; 0x32e <MDIO_SETPIN_VALUE+0x20>
 322:	41 30       	cpi	r20, 0x01	; 1
 324:	79 f5       	brne	.+94     	; 0x384 <MDIO_SETPIN_VALUE+0x76>
 326:	8b b3       	in	r24, 0x1b	; 27
 328:	68 2b       	or	r22, r24
 32a:	6b bb       	out	0x1b, r22	; 27
 32c:	08 95       	ret
 32e:	8b b3       	in	r24, 0x1b	; 27
 330:	60 95       	com	r22
 332:	68 23       	and	r22, r24
 334:	6b bb       	out	0x1b, r22	; 27
 336:	08 95       	ret
 338:	44 23       	and	r20, r20
 33a:	31 f0       	breq	.+12     	; 0x348 <MDIO_SETPIN_VALUE+0x3a>
 33c:	41 30       	cpi	r20, 0x01	; 1
 33e:	11 f5       	brne	.+68     	; 0x384 <MDIO_SETPIN_VALUE+0x76>
 340:	88 b3       	in	r24, 0x18	; 24
 342:	68 2b       	or	r22, r24
 344:	68 bb       	out	0x18, r22	; 24
 346:	08 95       	ret
 348:	88 b3       	in	r24, 0x18	; 24
 34a:	60 95       	com	r22
 34c:	68 23       	and	r22, r24
 34e:	68 bb       	out	0x18, r22	; 24
 350:	08 95       	ret
 352:	44 23       	and	r20, r20
 354:	31 f0       	breq	.+12     	; 0x362 <MDIO_SETPIN_VALUE+0x54>
 356:	41 30       	cpi	r20, 0x01	; 1
 358:	a9 f4       	brne	.+42     	; 0x384 <MDIO_SETPIN_VALUE+0x76>
 35a:	85 b3       	in	r24, 0x15	; 21
 35c:	68 2b       	or	r22, r24
 35e:	65 bb       	out	0x15, r22	; 21
 360:	08 95       	ret
 362:	85 b3       	in	r24, 0x15	; 21
 364:	60 95       	com	r22
 366:	68 23       	and	r22, r24
 368:	65 bb       	out	0x15, r22	; 21
 36a:	08 95       	ret
 36c:	44 23       	and	r20, r20
 36e:	31 f0       	breq	.+12     	; 0x37c <MDIO_SETPIN_VALUE+0x6e>
 370:	41 30       	cpi	r20, 0x01	; 1
 372:	41 f4       	brne	.+16     	; 0x384 <MDIO_SETPIN_VALUE+0x76>
 374:	82 b3       	in	r24, 0x12	; 18
 376:	68 2b       	or	r22, r24
 378:	62 bb       	out	0x12, r22	; 18
 37a:	08 95       	ret
 37c:	82 b3       	in	r24, 0x12	; 18
 37e:	60 95       	com	r22
 380:	68 23       	and	r22, r24
 382:	62 bb       	out	0x12, r22	; 18
 384:	08 95       	ret

00000386 <MDIO_GETPIN_VALUE>:
 386:	81 30       	cpi	r24, 0x01	; 1
 388:	59 f0       	breq	.+22     	; 0x3a0 <MDIO_GETPIN_VALUE+0x1a>
 38a:	28 f0       	brcs	.+10     	; 0x396 <MDIO_GETPIN_VALUE+0x10>
 38c:	82 30       	cpi	r24, 0x02	; 2
 38e:	69 f0       	breq	.+26     	; 0x3aa <MDIO_GETPIN_VALUE+0x24>
 390:	83 30       	cpi	r24, 0x03	; 3
 392:	81 f0       	breq	.+32     	; 0x3b4 <MDIO_GETPIN_VALUE+0x2e>
 394:	14 c0       	rjmp	.+40     	; 0x3be <MDIO_GETPIN_VALUE+0x38>
 396:	89 b3       	in	r24, 0x19	; 25
 398:	68 23       	and	r22, r24
 39a:	99 f0       	breq	.+38     	; 0x3c2 <MDIO_GETPIN_VALUE+0x3c>
 39c:	81 e0       	ldi	r24, 0x01	; 1
 39e:	08 95       	ret
 3a0:	86 b3       	in	r24, 0x16	; 22
 3a2:	68 23       	and	r22, r24
 3a4:	81 f0       	breq	.+32     	; 0x3c6 <MDIO_GETPIN_VALUE+0x40>
 3a6:	81 e0       	ldi	r24, 0x01	; 1
 3a8:	08 95       	ret
 3aa:	83 b3       	in	r24, 0x13	; 19
 3ac:	68 23       	and	r22, r24
 3ae:	69 f0       	breq	.+26     	; 0x3ca <MDIO_GETPIN_VALUE+0x44>
 3b0:	81 e0       	ldi	r24, 0x01	; 1
 3b2:	08 95       	ret
 3b4:	80 b3       	in	r24, 0x10	; 16
 3b6:	68 23       	and	r22, r24
 3b8:	51 f0       	breq	.+20     	; 0x3ce <MDIO_GETPIN_VALUE+0x48>
 3ba:	81 e0       	ldi	r24, 0x01	; 1
 3bc:	08 95       	ret
 3be:	80 e0       	ldi	r24, 0x00	; 0
 3c0:	08 95       	ret
 3c2:	80 e0       	ldi	r24, 0x00	; 0
 3c4:	08 95       	ret
 3c6:	80 e0       	ldi	r24, 0x00	; 0
 3c8:	08 95       	ret
 3ca:	80 e0       	ldi	r24, 0x00	; 0
 3cc:	08 95       	ret
 3ce:	80 e0       	ldi	r24, 0x00	; 0
 3d0:	08 95       	ret

000003d2 <TIMER0_INITIALIZE>:
 3d2:	60 93 61 00 	sts	0x0061, r22	; 0x800061 <prescaler_value>
 3d6:	82 30       	cpi	r24, 0x02	; 2
 3d8:	b1 f0       	breq	.+44     	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 3da:	18 f4       	brcc	.+6      	; 0x3e2 <TIMER0_INITIALIZE+0x10>
 3dc:	81 30       	cpi	r24, 0x01	; 1
 3de:	31 f0       	breq	.+12     	; 0x3ec <TIMER0_INITIALIZE+0x1a>
 3e0:	26 c0       	rjmp	.+76     	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
 3e2:	83 30       	cpi	r24, 0x03	; 3
 3e4:	b9 f0       	breq	.+46     	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
 3e6:	84 30       	cpi	r24, 0x04	; 4
 3e8:	e1 f0       	breq	.+56     	; 0x422 <__EEPROM_REGION_LENGTH__+0x22>
 3ea:	21 c0       	rjmp	.+66     	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
 3ec:	83 b7       	in	r24, 0x33	; 51
 3ee:	8f 7b       	andi	r24, 0xBF	; 191
 3f0:	83 bf       	out	0x33, r24	; 51
 3f2:	83 b7       	in	r24, 0x33	; 51
 3f4:	87 7f       	andi	r24, 0xF7	; 247
 3f6:	83 bf       	out	0x33, r24	; 51
 3f8:	83 b7       	in	r24, 0x33	; 51
 3fa:	8f 7e       	andi	r24, 0xEF	; 239
 3fc:	83 bf       	out	0x33, r24	; 51
 3fe:	83 b7       	in	r24, 0x33	; 51
 400:	8f 7d       	andi	r24, 0xDF	; 223
 402:	83 bf       	out	0x33, r24	; 51
 404:	14 c0       	rjmp	.+40     	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
 406:	83 b7       	in	r24, 0x33	; 51
 408:	80 64       	ori	r24, 0x40	; 64
 40a:	83 bf       	out	0x33, r24	; 51
 40c:	83 b7       	in	r24, 0x33	; 51
 40e:	87 7f       	andi	r24, 0xF7	; 247
 410:	83 bf       	out	0x33, r24	; 51
 412:	0d c0       	rjmp	.+26     	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
 414:	83 b7       	in	r24, 0x33	; 51
 416:	8f 7b       	andi	r24, 0xBF	; 191
 418:	83 bf       	out	0x33, r24	; 51
 41a:	83 b7       	in	r24, 0x33	; 51
 41c:	88 60       	ori	r24, 0x08	; 8
 41e:	83 bf       	out	0x33, r24	; 51
 420:	06 c0       	rjmp	.+12     	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
 422:	83 b7       	in	r24, 0x33	; 51
 424:	80 64       	ori	r24, 0x40	; 64
 426:	83 bf       	out	0x33, r24	; 51
 428:	83 b7       	in	r24, 0x33	; 51
 42a:	88 60       	ori	r24, 0x08	; 8
 42c:	83 bf       	out	0x33, r24	; 51
 42e:	8f b7       	in	r24, 0x3f	; 63
 430:	80 68       	ori	r24, 0x80	; 128
 432:	8f bf       	out	0x3f, r24	; 63
 434:	40 e0       	ldi	r20, 0x00	; 0
 436:	68 e0       	ldi	r22, 0x08	; 8
 438:	81 e0       	ldi	r24, 0x01	; 1
 43a:	0e 94 1e 01 	call	0x23c	; 0x23c <MDIO_SETPIN_STATUS>
 43e:	93 b7       	in	r25, 0x33	; 51
 440:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <prescaler_value>
 444:	89 2b       	or	r24, r25
 446:	83 bf       	out	0x33, r24	; 51
 448:	08 95       	ret

0000044a <TIMER0_PWM_SETUP>:
 44a:	82 30       	cpi	r24, 0x02	; 2
 44c:	41 f4       	brne	.+16     	; 0x45e <TIMER0_PWM_SETUP+0x14>
 44e:	83 b7       	in	r24, 0x33	; 51
 450:	8f 7e       	andi	r24, 0xEF	; 239
 452:	83 bf       	out	0x33, r24	; 51
 454:	83 b7       	in	r24, 0x33	; 51
 456:	80 62       	ori	r24, 0x20	; 32
 458:	83 bf       	out	0x33, r24	; 51
 45a:	6c bf       	out	0x3c, r22	; 60
 45c:	08 95       	ret
 45e:	83 30       	cpi	r24, 0x03	; 3
 460:	41 f4       	brne	.+16     	; 0x472 <TIMER0_PWM_SETUP+0x28>
 462:	83 b7       	in	r24, 0x33	; 51
 464:	80 61       	ori	r24, 0x10	; 16
 466:	83 bf       	out	0x33, r24	; 51
 468:	83 b7       	in	r24, 0x33	; 51
 46a:	80 62       	ori	r24, 0x20	; 32
 46c:	83 bf       	out	0x33, r24	; 51
 46e:	60 95       	com	r22
 470:	6c bf       	out	0x3c, r22	; 60
 472:	08 95       	ret

00000474 <__vector_10>:
 474:	1f 92       	push	r1
 476:	0f 92       	push	r0
 478:	0f b6       	in	r0, 0x3f	; 63
 47a:	0f 92       	push	r0
 47c:	11 24       	eor	r1, r1
 47e:	2f 93       	push	r18
 480:	3f 93       	push	r19
 482:	4f 93       	push	r20
 484:	5f 93       	push	r21
 486:	6f 93       	push	r22
 488:	7f 93       	push	r23
 48a:	8f 93       	push	r24
 48c:	9f 93       	push	r25
 48e:	af 93       	push	r26
 490:	bf 93       	push	r27
 492:	ef 93       	push	r30
 494:	ff 93       	push	r31
 496:	e0 91 62 00 	lds	r30, 0x0062	; 0x800062 <COMP_PTR>
 49a:	f0 91 63 00 	lds	r31, 0x0063	; 0x800063 <COMP_PTR+0x1>
 49e:	09 95       	icall
 4a0:	ff 91       	pop	r31
 4a2:	ef 91       	pop	r30
 4a4:	bf 91       	pop	r27
 4a6:	af 91       	pop	r26
 4a8:	9f 91       	pop	r25
 4aa:	8f 91       	pop	r24
 4ac:	7f 91       	pop	r23
 4ae:	6f 91       	pop	r22
 4b0:	5f 91       	pop	r21
 4b2:	4f 91       	pop	r20
 4b4:	3f 91       	pop	r19
 4b6:	2f 91       	pop	r18
 4b8:	0f 90       	pop	r0
 4ba:	0f be       	out	0x3f, r0	; 63
 4bc:	0f 90       	pop	r0
 4be:	1f 90       	pop	r1
 4c0:	18 95       	reti

000004c2 <__vector_11>:
 4c2:	1f 92       	push	r1
 4c4:	0f 92       	push	r0
 4c6:	0f b6       	in	r0, 0x3f	; 63
 4c8:	0f 92       	push	r0
 4ca:	11 24       	eor	r1, r1
 4cc:	2f 93       	push	r18
 4ce:	3f 93       	push	r19
 4d0:	4f 93       	push	r20
 4d2:	5f 93       	push	r21
 4d4:	6f 93       	push	r22
 4d6:	7f 93       	push	r23
 4d8:	8f 93       	push	r24
 4da:	9f 93       	push	r25
 4dc:	af 93       	push	r26
 4de:	bf 93       	push	r27
 4e0:	ef 93       	push	r30
 4e2:	ff 93       	push	r31
 4e4:	e0 91 64 00 	lds	r30, 0x0064	; 0x800064 <NORM_PTR>
 4e8:	f0 91 65 00 	lds	r31, 0x0065	; 0x800065 <NORM_PTR+0x1>
 4ec:	09 95       	icall
 4ee:	ff 91       	pop	r31
 4f0:	ef 91       	pop	r30
 4f2:	bf 91       	pop	r27
 4f4:	af 91       	pop	r26
 4f6:	9f 91       	pop	r25
 4f8:	8f 91       	pop	r24
 4fa:	7f 91       	pop	r23
 4fc:	6f 91       	pop	r22
 4fe:	5f 91       	pop	r21
 500:	4f 91       	pop	r20
 502:	3f 91       	pop	r19
 504:	2f 91       	pop	r18
 506:	0f 90       	pop	r0
 508:	0f be       	out	0x3f, r0	; 63
 50a:	0f 90       	pop	r0
 50c:	1f 90       	pop	r1
 50e:	18 95       	reti

00000510 <_exit>:
 510:	f8 94       	cli

00000512 <__stop_program>:
 512:	ff cf       	rjmp	.-2      	; 0x512 <__stop_program>
